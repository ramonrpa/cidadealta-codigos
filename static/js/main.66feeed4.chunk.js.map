{"version":3,"sources":["slices/userSlice.js","components/PrivateRoute.js","components/Card.js","components/TextInput.js","components/Button.js","api.js","slices/alertSlice.js","views/Auth.js","components/Dashboard.js","components/Table.js","components/Pagination.js","components/SelectInput.js","components/Alert.js","components/TextArea.js","utils.js","components/CodeModal.js","components/AlertYesOrNo.js","slices/paginationSlice.js","views/Codes.js","app.js","store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","username","isLogged","reducers","setUser","state","action","payload","getUser","user","actions","PrivateRoute","Component","component","rest","useSelector","render","props","to","pathname","from","location","Card","styled","div","TextInput","input","Button","button","type","axios","create","baseURL","alertSlice","show","message","setAlert","getAlert","alert","Auth","dispatch","useDispatch","useState","setUsername","password","setPassword","handleInput","event","target","value","signin","a","api","data","length","className","style","textAlign","width","src","process","alt","margin","onChange","placeholder","onClick","disabled","validations","push","reduce","t","validForm","SideNavbar","actived","NavHeader","NavItens","Content","ContentHeader","ContentChildren","User","UserDropdown","Dashbaord","dropdownShow","setDropdownShow","path","children","Table","table","PageList","ul","PageItem","li","Pagination","aria-label","pages","map","page","index","changePage","currentPage","Select","SelectInput","AlertStyled","AlertIcon","Alert","TextArea","textarea","mouths","LEFT_PAGE","RIGHT_PAGE","formatDate","date","withTime","Date","dateString","getDate","getMonth","getFullYear","getHours","getMinutes","formatMoney","money","currency","locale","intl","Intl","NumberFormat","isNaN","format","fetchPageNumbers","total","limit","pageNeighbours","totalPages","Math","ceil","totalBlocks","startPage","max","endPage","min","range","spillOffset","extraPages","step","i","Container","InputGroup","CodeModel","setName","description","setDescription","setDate","penalty","setPenalty","time","setTime","status","setStatus","statusList","setStatusList","useEffect","getStatus","nome","descricao","dataCriacao","multa","tempoPrisao","response","newStatus","forEach","id","newValue","replace","parseFloat","toFixed","parseInt","minWidth","display","htmlFor","defaultValue","Object","keys","minHeight","onSave","toISOString","marginLeft","onClose","AlertYesOrNo","onAccept","onDeny","totalRecords","orderBy","sortBy","filterBy","filterValue","paginationSlice","clearPagination","setData","setPage","setTotal","setLimit","setOrderBy","setSortBy","setFilterBy","setFilterValue","setPagination","getPagination","pagination","Codes","navbarActived","setNavbarActived","setPages","selected","setSelected","showModal","setShowModal","codeId","alertYesOrNo","setAlertYesOrNo","getCodes","useCallback","url","headers","changeSortBy","deleteCode","delete","save","put","console","log","post","maxWidth","justifyContent","alignItems","getFilterByComponent","colSpan","borderTop","App","basename","exact","store","configureStore","reducer","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66feeed4.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        username: '',\r\n        isLogged: false\r\n    },\r\n    reducers: {\r\n        setUser: (state, action) =>\r\n            state = action.payload\r\n    }\r\n})\r\n\r\nexport const getUser = (state) => state.user\r\n\r\nexport const { setUser } = userSlice.actions","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getUser } from '../slices/userSlice'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const user = useSelector(getUser)\r\n\r\n    return (\r\n        <Route {...rest}\r\n            render={props =>\r\n                user.isLogged ?\r\n                    <Component {...props} />\r\n                    :\r\n                    <Redirect to={{\r\n                        pathname: '/',\r\n                        state: { from: props.location }\r\n                    }} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #fff;\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    padding: 1.25rem;\r\n`\r\nexport default Card","import styled from 'styled-components'\r\n\r\nconst TextInput = styled.input`\r\n    display: block; \r\n    padding: 0.7rem;\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 0;\r\n    background-color: rgba(15, 15, 15, 0.08);\r\n\r\n    &:focus,\r\n    &:active {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: inset 0 -2px 0 var(--primary);\r\n        border-radius: 0;\r\n    }\r\n\r\n    &[type=date] {\r\n        padding: 0px 0.7rem;\r\n    }\r\n`\r\nexport default TextInput","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n    background-color: ${props => {\r\n        switch (props.type) {\r\n            case 'error':\r\n                return '#700;'\r\n            case 'success':\r\n                return '#070;'\r\n            default:\r\n                return 'var(--primary);'\r\n        }\r\n    }};\r\n    padding: 0.7rem;\r\n    border: none;\r\n    color: #fff;\r\n    padding: 0.5rem 1rem;\r\n    line-height: 1.5;\r\n    cursor: pointer;\r\n\r\n    &:focus,\r\n    &:active,\r\n    &:hover {\r\n        outline: none;\r\n        box-shadow: 0px 0px 20px 0px ${props => {\r\n            switch (props.type) {\r\n                case 'error':\r\n                    return '#700;'\r\n                case 'success':\r\n                    return '#070;'\r\n                default:\r\n                    return 'var(--primary);'\r\n            }\r\n        }};;\r\n    }\r\n\r\n    &:disabled {\r\n        outline: none;\r\n        box-shadow: none;\r\n        filter: brightness(85%);\r\n    }\r\n`\r\nexport default Button","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: `https://my-json-server.typicode.com/cidadealta/exercise/`\r\n})","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const alertSlice = createSlice({\r\n    name: 'alert',\r\n    initialState: {\r\n        show: false,\r\n        message: '',\r\n        type: 'success'\r\n    },\r\n    reducers: {\r\n        setAlert: (state, action) =>\r\n            state = action.payload\r\n    }\r\n})\r\n\r\nexport const getAlert = (state) => state.alert\r\n\r\nexport const { setAlert } = alertSlice.actions","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Card from '../components/Card'\r\nimport TextInput from '../components/TextInput'\r\nimport Button from '../components/Button'\r\n\r\nimport api from '../api'\r\nimport { setAlert, getAlert } from '../slices/alertSlice'\r\nimport { setUser, getUser } from '../slices/userSlice'\r\n\r\nconst Auth = props => {\r\n\r\n    const alert = useSelector(getAlert)\r\n    const user = useSelector(getUser)\r\n    const dispatch = useDispatch()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleInput = event => {\r\n        switch (event.target.name) {\r\n            case \"username\":\r\n                setUsername(event.target.value)\r\n                break;\r\n            case \"password\":\r\n                setPassword(event.target.value)\r\n                break;\r\n        }\r\n    }\r\n\r\n    const validForm = () => {\r\n        const validations = []\r\n        validations.push(username && username.length >= 3)\r\n        validations.push(password && password.length >= 3)\r\n        return validations.reduce((t, a) => t && a)\r\n    }\r\n\r\n    const signin = async () => {\r\n        try {\r\n            const response = await api(`usuarios?nome=${username}&senha=${password}`)\r\n            if (response.data.length > 0) {\r\n                dispatch(setUser({ username, isLogged: true }))\r\n                dispatch(setAlert({\r\n                    show: false,\r\n                    message: '',\r\n                    type: 'error'\r\n                }))\r\n            } else {\r\n                dispatch(setAlert({\r\n                    show: true,\r\n                    message: 'Não conseguimos encontrar uma conta com essas credenciais.',\r\n                    type: 'error'\r\n                }))\r\n            }\r\n        } catch {\r\n            dispatch(setAlert({\r\n                show: true,\r\n                message: 'Ocorreu um erro durante o login.',\r\n                type: 'error'\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        user.isLogged ?\r\n            <Redirect to=\"/codigos\" /> :\r\n            <div className=\"auth\">\r\n                <Card style={{ textAlign: 'center', width: '300px' }}>\r\n                    <img className=\"auth-logo\" src={`${process.env.PUBLIC_URL}/logo.png`} alt=\"logo\" />\r\n                    <h2 className=\"auth-title\">Login</h2>\r\n                    <TextInput\r\n                        style={{ margin: '0.5rem 0px' }}\r\n                        value={username}\r\n                        onChange={handleInput}\r\n                        name=\"username\"\r\n                        placeholder=\"Nome de usuário\" />\r\n                    <TextInput\r\n                        style={{ margin: '0.5rem 0px' }}\r\n                        value={password}\r\n                        onChange={handleInput}\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Senha\" />\r\n                    <span className={`auth-message ${alert.show ? 'active' : ''} ${alert.type}`}>{alert.message}</span>\r\n                    <Button onClick={signin}\r\n                        disabled={!validForm()}>Acessar</Button>\r\n                </Card>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Auth","import React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { getUser, setUser } from '../slices/userSlice'\r\n\r\nconst SideNavbar = styled.div`\r\n    height: 100%;\r\n    width: ${props => props.actived ? '250px' : '90px'};\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: var(--secundary);\r\n    transition: all 0.5s;\r\n    color: #fff;\r\n    overflow-x: hidden;\r\n\r\n    @media (max-width: 700px){\r\n        width: ${props => props.actived ? '150px' : '90px'};\r\n    } \r\n\r\n`\r\n\r\nconst NavHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: ${props => props.actived ? 'left' : 'center'};\r\n    padding: 20px 20px;\r\n    border-bottom: 2px rgba(255, 255, 255, 0.1) solid;\r\n\r\n    img {\r\n        width: ${props => props.actived ? '35px' : '40px'};\r\n    }\r\n\r\n    h2 {\r\n        font-size: 1.5rem;\r\n        font-weight: 700;\r\n        margin: 0;\r\n        margin-left: 10px;\r\n        display: ${props => props.actived ? 'block' : 'none'};\r\n    }\r\n`\r\n\r\nconst NavItens = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: ${props => props.actived ? 'left' : 'center'};\r\n        color: #CCC;\r\n        text-decoration: none;\r\n        margin: 10px 0px;\r\n        padding: 5px 15px;\r\n        transition: all 0.3s;\r\n\r\n        &.active,\r\n        &:hover {\r\n            border-left: 5px var(--primary) solid;\r\n            color: #fff;\r\n        }\r\n\r\n        i {\r\n            font-size: ${props => props.actived ? '10px' : '25px'};\r\n            margin-right: 10px;\r\n        }\r\n\r\n        span {\r\n            display: ${props => props.actived ? 'block' : 'none'};\r\n        }\r\n    }\r\n`\r\n\r\nconst Content = styled.div`\r\n    height: 100%;\r\n    margin-left: ${props => props.actived ? '250px' : '90px'};\r\n    background-color: #eee;\r\n    transition: margin-left .5s;\r\n    overflow-x: hidden;\r\n\r\n    @media (max-width: 700px){\r\n        margin-left: ${props => props.actived ? '150px' : '90px'};\r\n    } \r\n`\r\n\r\nconst ContentHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n\r\n    .nav-button {\r\n        color: #aaa;\r\n        cursor: pointer;\r\n        font-size: 1rem;\r\n\r\n        &:hover {\r\n            color: var(--primary);\r\n        }\r\n    }\r\n\r\n    .nav-account {\r\n        color: #aaa;\r\n        cursor: pointer;\r\n        font-size: 1rem;\r\n        padding: 8px;\r\n        border: 1px solid;\r\n        border-radius: 50%;\r\n\r\n        &:hover {\r\n            color: var(--primary);\r\n\r\n            i {\r\n                border-color: var(--primary);\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst ContentChildren = styled.div`\r\n    padding: 20px;\r\n    overflow-x: auto;\r\n`\r\n\r\nconst User = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    text-align: end;\r\n`\r\n\r\nconst UserDropdown = styled.div`\r\n    position: absolute;\r\n    right: ${props => props.actived ? '0' : '-500px'};\r\n    background-color: #aaa;\r\n    color: #fff;\r\n    margin: 5px 0px;\r\n    padding: 0;\r\n    z-index: 100;\r\n    text-align: start;\r\n    transition: right 0.2s;\r\n\r\n    span {\r\n        display: block;\r\n        padding: .5rem 1.5rem;\r\n        cursor: pointer;\r\n        color: #eee;\r\n\r\n        &:hover {\r\n            color: #fff;\r\n        }\r\n    }\r\n`\r\n\r\nconst Dashbaord = props => {\r\n\r\n    const user = useSelector(getUser)\r\n    const dispatch = useDispatch()\r\n    const [dropdownShow, setDropdownShow] = useState(false)\r\n\r\n    return (\r\n        <Fragment>\r\n            <SideNavbar actived={props.actived}>\r\n                <NavHeader actived={props.actived}>\r\n                    <img src={`${process.env.PUBLIC_URL}/logo.png`} alt=\"logo\" />\r\n                    <h2>{user.username}</h2>\r\n                </NavHeader>\r\n                <NavItens actived={props.actived}>\r\n                    <Link to=\"/codigos\" className={props.path === 'codes' ? 'active' : ''}><i className=\"fas fa-file-contract\"></i> <span>Códigos Penais</span></Link>\r\n                </NavItens>\r\n            </SideNavbar>\r\n            <Content actived={props.actived}>\r\n                <ContentHeader>\r\n                    <i className=\"nav-button fas fa-bars\" onClick={props.onClick}></i>\r\n                    <User>\r\n                        <i className=\"nav-account fas fa-user\" onClick={() => setDropdownShow(!dropdownShow)}></i>\r\n                        <UserDropdown actived={dropdownShow}>\r\n                            <span>Meu Perfil</span>\r\n                            <span onClick={() => dispatch(setUser({ username: '', isLogged: false }))}>Sair</span>\r\n                        </UserDropdown>\r\n                    </User>\r\n                </ContentHeader>\r\n                <ContentChildren>\r\n                    {props.children}\r\n                </ContentChildren>\r\n            </Content>\r\n        </Fragment>)\r\n}\r\n\r\nexport default Dashbaord\r\n","import styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n    text-align: left;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    border-spacing: 0;\r\n\r\n    th {\r\n        padding: .75rem;\r\n        color: var(--secundary);\r\n        padding-bottom: 10px;\r\n        border-bottom: 1px rgba(15, 15, 15, 0.1) solid;\r\n        cursor: pointer;\r\n\r\n        &.actived {\r\n            color: var(--primary);\r\n\r\n            &:after {\r\n                font-family: 'Font Awesome 5 Free';\r\n                margin-left: 10px;\r\n            }\r\n\r\n            &.up {\r\n                &:after {\r\n                    content: '\\f106'\r\n                }\r\n            }\r\n\r\n            &.down {\r\n                &:after {\r\n                    content: '\\f107'\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    td {\r\n        padding: .75rem;\r\n    }\r\n\r\n    a {\r\n        color: #000;\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n            color: var(--primary);\r\n        }\r\n    }\r\n`\r\n\r\nexport default Table","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst PageList = styled.ul`\r\n    display: flex;\r\n    justify-content: center;\r\n    list-style-type: none;\r\n    padding: 0;\r\n`\r\n\r\nconst PageItem = styled.li`\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    margin: 0px 5px;\r\n\r\n    &:hover,\r\n    &.active {\r\n        a {\r\n            border-bottom: 1px var(--primary) solid;\r\n        }\r\n    }\r\n\r\n    a {\r\n        color: #000;\r\n        border: 0px;\r\n        border-radius: 0;\r\n        padding: 10px 15px;\r\n    }\r\n`\r\n\r\nconst Pagination = props => (\r\n    <nav aria-label=\"Pagination\">\r\n        <PageList>\r\n            {props.pages.map((page, index) => {\r\n                if (page === 'LEFT') return (\r\n                    <PageItem key={index}\r\n                        onClick={() => props.changePage(props.currentPage - 1)}>\r\n                        <a aria-label=\"Previous\">\r\n                            <i className=\"fas fa-caret-left\"></i>\r\n                        </a>\r\n                    </PageItem>\r\n                )\r\n                if (page === 'RIGHT') return (\r\n                    <PageItem key={index}\r\n                        onClick={() => props.changePage(props.currentPage + 1)}>\r\n                        <a aria-label=\"Next\">\r\n                            <i className=\"fas fa-caret-right\"></i>\r\n                        </a>\r\n                    </PageItem>\r\n                )\r\n                return (\r\n                    <PageItem key={index} className={props.currentPage === page ? 'active' : ''}\r\n                        onClick={() => props.changePage(page)}>\r\n                        <a>{page}</a>\r\n                    </PageItem>\r\n                )\r\n            })}\r\n        </PageList>\r\n    </nav>\r\n)\r\n\r\nexport default Pagination","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Select = styled.div`\r\n    position: relative;\r\n\r\n    div {\r\n        position: absolute;\r\n        right: 12px;\r\n        top: calc(50% - 12px);\r\n    }\r\n\r\n    select {\r\n        -webkit-appearance: none;\r\n        padding: 0.7rem 2rem 0.7rem 0.7rem;\r\n        outline: none;\r\n        border: none;\r\n        border-radius: 0;\r\n        background-color: rgba(15, 15, 15, 0.08);\r\n\r\n        &:focus {\r\n            outline: none;\r\n            border: none;\r\n            border-radius: 0;\r\n            box-shadow: 0px 0px 4px 0px var(--primary);\r\n        }\r\n    }\r\n`\r\n\r\nconst SelectInput = props => (\r\n    <Select>\r\n        <select {...props}>\r\n            {props.children}\r\n        </select>\r\n        <div>\r\n            <i className=\"fas fa-angle-down\"></i>\r\n        </div>\r\n    </Select>\r\n)\r\n\r\nexport default SelectInput","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Button from './Button'\r\nimport Card from './Card'\r\n\r\nimport { getAlert } from '../slices/alertSlice'\r\n\r\nconst AlertStyled = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: ${props => props.actived ? '0' : '100%'};\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(15, 15, 15, 0.2);\r\n    opacity: ${props => props.actived ? '1' : '0'};\r\n    transition: opacity 0.5s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n\r\n    h2 {\r\n        font-weight: 500;\r\n    }\r\n\r\n    button {\r\n        margin-top: 20px;\r\n    }\r\n`\r\n\r\nconst AlertIcon = styled.div`\r\n    color: ${props => props.type === 'error' ? '#700' : '#070'};\r\n    font-size: 50px;\r\n`\r\n\r\nconst Alert = props => {\r\n\r\n    const alert = useSelector(getAlert)\r\n\r\n    return (\r\n        <AlertStyled actived={alert.show}>\r\n            <Card style={{ textAlign: 'center', ...props.style }}>\r\n                <AlertIcon type={alert.type}>\r\n                    {alert.type === 'error' ? <i className=\"fas fa-times-circle\"></i> : <i className=\"fas fa-check-circle\"></i>}\r\n                </AlertIcon>\r\n                <h2>{alert.message}</h2>\r\n                <div>\r\n                    <Button type={alert.type} onClick={props.onClick}>Ok</Button>\r\n                </div>\r\n            </Card>\r\n        </AlertStyled>\r\n    )\r\n}\r\n\r\nexport default Alert","import styled from 'styled-components'\r\n\r\nconst TextArea = styled.textarea`\r\n    display: block; \r\n    padding: 0.7rem;\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 0;\r\n    background-color: rgba(15, 15, 15, 0.08);\r\n\r\n    &:focus,\r\n    &:active {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: inset 0 -2px 0 var(--primary);\r\n        border-radius: 0;\r\n    }\r\n\r\n    &[type=date] {\r\n        padding: 0px 0.7rem;\r\n    }\r\n`\r\nexport default TextArea","const mouths = ['Janeiro', 'Fevereiro', 'Marco', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Septembro', 'Outubro', 'Novembro', 'Dezembro']\r\nconst LEFT_PAGE = 'LEFT'\r\nconst RIGHT_PAGE = 'RIGHT'\r\n\r\nconst formatDate = (date, withTime = false) => {\r\n    date = new Date(date)\r\n    let dateString = `${date.getDate()} `\r\n    dateString += `${mouths[date.getMonth()]} `\r\n    dateString += date.getFullYear()\r\n    if (withTime) {\r\n        dateString += ` ás ${date.getHours()}:${date.getMinutes()} horas`\r\n    }\r\n    return dateString\r\n}\r\n\r\nconst formatMoney = (money, currency = 'BRL', locale = 'pt-BR') => {\r\n    const intl = new Intl.NumberFormat(locale, { style: 'currency', currency: currency })\r\n    if (isNaN(money))\r\n        money = 0\r\n    return intl.format(money)\r\n}\r\n\r\nconst range = (from, to, step = 1) => {\r\n    let i = from\r\n    const range = []\r\n\r\n    while (i <= to) {\r\n        range.push(i)\r\n        i += step\r\n    }\r\n\r\n    return range\r\n}\r\n\r\nconst fetchPageNumbers = (total, limit, currentPage, pageNeighbours) => {\r\n    const totalPages = Math.ceil(total / limit)\r\n    const totalBlocks = (pageNeighbours * 2) + 3\r\n\r\n    if (totalPages > totalBlocks) {\r\n        const startPage = Math.max(1, currentPage - pageNeighbours)\r\n        const endPage = Math.min(totalPages, currentPage + pageNeighbours)\r\n        let pages = this.range(startPage, endPage)\r\n        const spillOffset = totalBlocks - (pages.length + 2)\r\n\r\n        if (startPage < 2) {\r\n            const extraPages = this.range(endPage + 1, endPage + spillOffset);\r\n            pages = [...pages, ...extraPages]\r\n        }\r\n        if ((totalPages - currentPage) < 2) {\r\n            const extraPages = this.range(startPage - spillOffset, startPage - 1);\r\n            pages = [...extraPages, ...pages]\r\n        }\r\n\r\n        if (currentPage > 1)\r\n            pages = [LEFT_PAGE, ...pages]\r\n        if (currentPage < totalPages)\r\n            pages = [...pages, RIGHT_PAGE]\r\n\r\n        return pages\r\n    }\r\n\r\n    let pages = range(1, totalPages)\r\n\r\n    if (currentPage > 1)\r\n        pages = [LEFT_PAGE, ...pages]\r\n    if (currentPage < totalPages)\r\n        pages = [...pages, RIGHT_PAGE]\r\n\r\n    return pages\r\n}\r\n\r\nexport { formatDate, range, fetchPageNumbers, formatMoney }","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Card from './Card'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport TextArea from '../components/TextArea'\r\nimport SelectInput from '../components/SelectInput'\r\n\r\nimport { formatDate, formatMoney } from '../utils'\r\nimport api from '../api'\r\n\r\nconst Container = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: ${props => props.actived ? '0' : '100%'};\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(15, 15, 15, 0.2);\r\n    opacity: ${props => props.actived ? '1' : '0'};\r\n    transition: opacity 0.5s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst InputGroup = styled.div`\r\n    margin: 0.7rem;\r\n    label {\r\n        display: inline-block;\r\n        margin-bottom: 10px;\r\n        i {\r\n            margin-right: 5px;\r\n        }\r\n    }\r\n`\r\n\r\nconst CodeModel = props => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [penalty, setPenalty] = useState(0)\r\n    const [time, setTime] = useState(0)\r\n    const [status, setStatus] = useState(1)\r\n    const [statusList, setStatusList] = useState({})\r\n\r\n    useEffect(() => {\r\n        getStatus()\r\n        if (props.data) {\r\n            setName(props.data.nome)\r\n            setDescription(props.data.descricao)\r\n            setDate(props.data.dataCriacao)\r\n            setPenalty(props.data.multa)\r\n            setTime(props.data.tempoPrisao)\r\n            setStatus(props.data.status)\r\n        } else {\r\n            setName('')\r\n            setDescription('')\r\n            setDate('')\r\n            setPenalty(0)\r\n            setTime(0)\r\n            setStatus(1)\r\n        }\r\n    }, [props])\r\n\r\n    const getStatus = async () => {\r\n        try {\r\n            const response = await api(`status`)\r\n            let newStatus = {}\r\n            response.data.forEach(status => {\r\n                newStatus[status.id] = status.descricao\r\n            })\r\n            setStatusList(newStatus)\r\n        } catch { }\r\n    }\r\n\r\n    const validForm = () => {\r\n        const validations = []\r\n        validations.push(name && name.length >= 3)\r\n        validations.push(time && time > 0)\r\n        validations.push(description && description.length > 3)\r\n        return validations.reduce((t, a) => t && a)\r\n    }\r\n\r\n    const handleInput = event => {\r\n        const value = event.target.value\r\n        switch (event.target.id) {\r\n            case 'name':\r\n                setName(value)\r\n                break\r\n            case 'status':\r\n                setStatus(value)\r\n                break\r\n            case 'penalty':\r\n                let newValue = value.replace(/[^\\d,-]/g, '').replace(',', '.')\r\n                newValue = parseFloat(newValue).toFixed(2)\r\n                setPenalty(newValue)\r\n                break\r\n            case 'time':\r\n                if (isNaN(value)) {\r\n                    setTime(0)\r\n                    break\r\n                }\r\n                setTime(parseInt(value))\r\n                break\r\n            case 'description':\r\n                setDescription(value)\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container actived={props.actived}>\r\n            <Card style={{ minWidth: '500px' }}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <InputGroup>\r\n                        <label htmlFor=\"name\"><i className=\"fas fa-tag\"></i>Nome</label>\r\n                        <TextInput\r\n                            id=\"name\"\r\n                            value={name}\r\n                            onChange={handleInput}\r\n                            placeholder=\"Nome do Código Penal\" />\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <label htmlFor=\"name\"><i className=\"fas fa-toggle-on\"></i>Status</label>\r\n                        <SelectInput\r\n                            style={{ minWidth: '200px' }}\r\n                            id=\"status\"\r\n                            defaultValue={status}\r\n                            onChange={handleInput}\r\n                        >\r\n                            {Object.keys(statusList).map(id => (<option key={id} value={id}>{statusList[id]}</option>))}\r\n                        </SelectInput>\r\n                    </InputGroup>\r\n                </div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <InputGroup>\r\n                        <label htmlFor=\"penalty\"><i className=\"fas fa-money-bill-wave\"></i>Multa</label>\r\n                        <TextInput\r\n                            id=\"penalty\"\r\n                            value={penalty > 0 ? formatMoney(penalty) : ''}\r\n                            onChange={handleInput}\r\n                            placeholder=\"R$ 00,00\" />\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <label htmlFor=\"time\"><i className=\"fas fa-clock\"></i>Tempo de Prisão</label>\r\n                        <TextInput\r\n                            id=\"time\"\r\n                            value={time}\r\n                            onChange={handleInput}\r\n                            placeholder=\"Tempo de Prisão para o Código Penal\" />\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <label htmlFor=\"date\"><i className=\"fas fa-clock\"></i>Data de criação</label>\r\n                        <TextInput\r\n                            disabled\r\n                            id=\"date\"\r\n                            value={date ? formatDate(date, true) : ''}\r\n                            onChange={handleInput}\r\n                            placeholder=\"Setado automaticamente\" />\r\n                    </InputGroup>\r\n                </div>\r\n                <InputGroup>\r\n                    <label htmlFor=\"description\"><i className=\"fas fa-align-left\"></i>Descrição</label>\r\n                    <TextArea\r\n                        style={{ minWidth: 'calc(100% - (0.7rem + 10px))', minHeight: '150px' }}\r\n                        id=\"description\"\r\n                        value={description}\r\n                        onChange={handleInput}\r\n                        placeholder=\"Descrição do Código Penal\" />\r\n                </InputGroup>\r\n                <div style={{ display: 'flex', margin: '0px 0.7rem' }}>\r\n                    <Button onClick={() => props.onSave({\r\n                        nome: name,\r\n                        descricao: description,\r\n                        dataCriacao: new Date().toISOString(),\r\n                        multa: isNaN(penalty) ? penalty : 0,\r\n                        tempoPrisao: time,\r\n                        status\r\n                    })} disabled={!validForm()}>Salvar</Button>\r\n                    <Button style={{ marginLeft: '0.7rem' }} type=\"error\" onClick={props.onClose}>Fechar</Button>\r\n                </div>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CodeModel","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Button from './Button'\r\nimport Card from './Card'\r\n\r\nconst AlertStyled = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: ${props => props.actived ? '0' : '100%'};\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(15, 15, 15, 0.2);\r\n    opacity: ${props => props.actived ? '1' : '0'};\r\n    transition: opacity 0.5s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n\r\n    h2 {\r\n        font-weight: 500;\r\n    }\r\n\r\n    button {\r\n        margin-top: 20px;\r\n    }\r\n`\r\n\r\nconst AlertIcon = styled.div`\r\n    color: #ffc107;\r\n    font-size: 50px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst AlertYesOrNo = props => {\r\n\r\n    return (\r\n        <AlertStyled actived={props.show}>\r\n            <Card style={{ textAlign: 'center', ...props.style }}>\r\n                <AlertIcon>\r\n                    <i className=\"fas fa-exclamation-triangle\"></i>\r\n                </AlertIcon>\r\n                <h2>{props.message}</h2>\r\n                <div>\r\n                    <Button type='success' onClick={props.onAccept}>Sim</Button>\r\n                    <Button style={{ marginLeft: '1rem' }} type='error' onClick={props.onDeny}>Não</Button>\r\n                </div>\r\n            </Card>\r\n        </AlertStyled>\r\n    )\r\n}\r\n\r\nexport default AlertYesOrNo","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    data: [],\r\n    currentPage: 1,\r\n    totalRecords: 1,\r\n    limit: 10,\r\n    orderBy: 'asc',\r\n    sortBy: '',\r\n    filterBy: '',\r\n    filterValue: ''\r\n}\r\n\r\nexport const paginationSlice = createSlice({\r\n    name: 'pagination',\r\n    initialState,\r\n    reducers: {\r\n        clearPagination: state => {\r\n            state = initialState\r\n        },\r\n        setData: (state, action) => {\r\n            state.data = action.payload\r\n        },\r\n        setPage: (state, action) => {\r\n            state.currentPage = action.payload\r\n        },\r\n        setTotal: (state, action) => {\r\n            state.totalRecords = action.payload\r\n        },\r\n        setLimit: (state, action) => {\r\n            state.limit = action.payload\r\n        },\r\n        setOrderBy: (state, action) => {\r\n            state.orderBy = action.payload\r\n        },\r\n        setSortBy: (state, action) => {\r\n            state.sortBy = action.payload\r\n        },\r\n        setFilterBy: (state, action) => {\r\n            state.filterBy = action.payload\r\n        },\r\n        setFilterValue: (state, action) => {\r\n            state.filterValue = action.payload\r\n        },\r\n        setPagination: (state, action) => {\r\n            state = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const getPagination = (state) => state.pagination\r\n\r\nexport const {\r\n    setPage, setTotal, setLimit,\r\n    setOrderBy, setSortBy, setFilterBy,\r\n    setFilterValue, setPagination, clearPagination,\r\n    setData } = paginationSlice.actions","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Dashbaord from '../components/Dashboard'\r\nimport Table from '../components/Table'\r\nimport Pagination from '../components/Pagination'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport SelectInput from '../components/SelectInput'\r\nimport Alert from '../components/Alert'\r\nimport CodeModel from '../components/CodeModal'\r\nimport AlertYesOrNo from '../components/AlertYesOrNo'\r\n\r\nimport { formatDate, fetchPageNumbers } from '../utils'\r\nimport api from '../api'\r\nimport { setAlert } from '../slices/alertSlice'\r\nimport { clearPagination, setPage, setData, setTotal, setOrderBy, setSortBy, setFilterBy, setFilterValue, getPagination, setLimit } from '../slices/paginationSlice'\r\n\r\nconst Codes = props => {\r\n\r\n    const pagination = useSelector(getPagination)\r\n    const dispatch = useDispatch()\r\n    const [navbarActived, setNavbarActived] = useState(true)\r\n    const [status, setStatus] = useState({})\r\n    const [pages, setPages] = useState([1])\r\n    const [selected, setSelected] = useState(null)\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [alertYesOrNo, setAlertYesOrNo] = useState({ show: false, message: '', codeId: 0 })\r\n\r\n    useEffect(() => {\r\n        dispatch(clearPagination())\r\n        getStatus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getCodes()\r\n    }, [pagination.currentPage, pagination.sortBy, pagination.orderBy, pagination.filterBy])\r\n\r\n    const getCodes = useCallback(async () => {\r\n        try {\r\n            let url = `codigopenal?_limit=${pagination.limit}&_page=${pagination.currentPage}&_sort=${pagination.sortBy}&_order=${pagination.orderBy}`\r\n            if (pagination.filterBy) {\r\n                url += `&${pagination.filterBy}_like=${pagination.filterValue}`\r\n            }\r\n            const response = await api(url)\r\n            dispatch(setData(response.data))\r\n            dispatch(setTotal(response.headers['x-total-count']))\r\n            setPages(fetchPageNumbers(response.headers['x-total-count'], pagination.limit, pagination.currentPage, 2))\r\n        } catch { }\r\n    }, [pagination.limit, pagination.currentPage, pagination.sortBy, pagination.orderBy, pagination.filterBy, pagination.filterValue])\r\n\r\n    const getStatus = async () => {\r\n        try {\r\n            const response = await api(`status`)\r\n            let newStatus = {}\r\n            response.data.forEach(status => {\r\n                newStatus[status.id] = status.descricao\r\n            })\r\n            setStatus(newStatus)\r\n        } catch { }\r\n    }\r\n\r\n    const changeSortBy = event => {\r\n        const name = event.target.id\r\n\r\n        if (pagination.sortBy === name)\r\n            dispatch(setOrderBy(pagination.orderBy === 'asc' ? 'desc' : 'asc'))\r\n        else\r\n            dispatch(setSortBy(name))\r\n\r\n        dispatch(clearPagination())\r\n    }\r\n\r\n    const handleInput = event => {\r\n        switch (event.target.name) {\r\n            case 'filterBy':\r\n                dispatch(setFilterBy(event.target.value))\r\n                dispatch(setFilterValue(''))\r\n                break\r\n            case 'filterValue':\r\n                dispatch(setFilterValue(event.target.value))\r\n                break\r\n            case 'limit':\r\n                dispatch(setLimit(event.target.value))\r\n                break\r\n        }\r\n\r\n        dispatch(clearPagination())\r\n    }\r\n\r\n    const deleteCode = async id => {\r\n        try {\r\n            await api.delete(`codigopenal/${id}`)\r\n            getCodes()\r\n            dispatch(setAlert({\r\n                show: true,\r\n                message: 'Codigo deletado com sucesso.',\r\n                type: 'success'\r\n            }))\r\n        } catch {\r\n            dispatch(setAlert({\r\n                show: false,\r\n                message: 'Não foi possivel deletar este código.',\r\n                type: 'error'\r\n            }))\r\n        }\r\n        setAlertYesOrNo({ show: false, message: '', codeId: 0 })\r\n    }\r\n\r\n    const dismissAlert = () => {\r\n        dispatch(setAlert({\r\n            show: false,\r\n            message: '',\r\n            type: 'success'\r\n        }))\r\n    }\r\n\r\n    const save = async data => {\r\n        let alert = {\r\n            show: true,\r\n            message: 'Código Penal atualizado com sucesso.',\r\n            type: 'success'\r\n        }\r\n        if (selected) {\r\n            try {\r\n                await api.put(`/codigopenal/${selected.id}`, data)\r\n                setShowModal(false)\r\n            } catch (error) {\r\n                alert.message = 'Ocorreu um erro ao tentar atualizar o Código Penal.'\r\n                alert.type = 'error'\r\n                console.log(error)\r\n            }\r\n        } else {\r\n            try {\r\n                await api.post('/codigopenal', data)\r\n                alert.message = 'Novo Código Penal adicionado com sucesso.'\r\n                setShowModal(false)\r\n            } catch (error) {\r\n                alert.message = 'Ocorreu um erro ao tentar adicionar um novo Código Penal.'\r\n                alert.type = 'error'\r\n                console.log(error)\r\n            }\r\n        }\r\n        dispatch(setAlert(alert))\r\n    }\r\n\r\n    const getFilterByComponent = () => {\r\n        switch (pagination.filterBy) {\r\n            case 'nome':\r\n            case 'multa':\r\n                return <TextInput\r\n                    style={{ marginLeft: '0.5rem', minWidth: '200px' }}\r\n                    name=\"filterValue\"\r\n                    placeholder=\"Pesquise aqui...\"\r\n                    value={pagination.filterValue}\r\n                    onChange={handleInput}\r\n                />\r\n            case 'status':\r\n                return <SelectInput\r\n                    style={{ marginLeft: '0.5rem', minWidth: '200px' }}\r\n                    onChange={handleInput}\r\n                    name=\"filterValue\"\r\n                >\r\n                    {Object.keys(status).map(id => (<option key={id} value={id}>{status[id]}</option>))}\r\n                </SelectInput>\r\n            case 'dataCriacao':\r\n                return <TextInput\r\n                    style={{ marginLeft: '0.5rem', minWidth: '200px' }}\r\n                    type=\"date\"\r\n                    name=\"filterValue\"\r\n                    value={pagination.filterValue}\r\n                    onChange={handleInput}\r\n                />\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dashbaord actived={navbarActived} path='codes'\r\n            onClick={() => setNavbarActived(!navbarActived)}>\r\n            <AlertYesOrNo {...alertYesOrNo}\r\n                style={{ maxWidth: '500px' }}\r\n                onAccept={() => deleteCode(alertYesOrNo.codeId)}\r\n                onDeny={() => setAlertYesOrNo({ show: false, message: '', codeId: 0 })} />\r\n            <Alert style={{ maxWidth: '500px' }} onClick={dismissAlert} />\r\n            <CodeModel actived={showModal} data={selected} onClose={() => setShowModal(false)} onSave={save} />\r\n            <div style={{ display: 'flex', margin: '0.5rem 0px', justifyContent: 'space-between' }}>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <span>Mostrando {(pagination.currentPage - 1) * pagination.limit + 1}-{(pagination.currentPage - 1) * pagination.limit + pagination.data.length} de {pagination.totalRecords}</span>\r\n                </div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <SelectInput\r\n                        style={{ minWidth: '200px' }}\r\n                        onChange={handleInput}\r\n                        name=\"filterBy\"\r\n                    >\r\n                        <option value=\"\">Selecione um filtro</option>\r\n                        <option value=\"nome\">Nome</option>\r\n                        <option value=\"dataCriacao\">Data</option>\r\n                        <option value=\"multa\">Multa</option>\r\n                        <option value=\"status\">Status</option>\r\n                    </SelectInput>\r\n                    {getFilterByComponent()}\r\n                    {pagination.filterBy &&\r\n                        <Button style={{ marginLeft: '0.5rem' }} onClick={getCodes}>Filtar</Button>}\r\n                </div>\r\n            </div>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th id=\"nome\" onClick={changeSortBy} className={`${pagination.sortBy === 'nome' ? (pagination.orderBy === 'asc' ? 'actived up' : 'actived down') : ''}`}>Nome</th>\r\n                        <th id=\"dataCriacao\" onClick={changeSortBy} className={`${pagination.sortBy === 'dataCriacao' ? (pagination.orderBy === 'asc' ? 'actived up' : 'actived down') : ''}`}>Data</th>\r\n                        <th id=\"multa\" onClick={changeSortBy} className={`${pagination.sortBy === 'multa' ? (pagination.orderBy === 'asc' ? 'actived up' : 'actived down') : ''}`}>Multa</th>\r\n                        <th id=\"status\" onClick={changeSortBy} className={`${pagination.sortBy === 'status' ? (pagination.orderBy === 'asc' ? 'actived up' : 'actived down') : ''}`}>Status</th>\r\n                        <th>Editar</th>\r\n                        <th>Excluir</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {pagination.data.length > 0 ?\r\n                        pagination.data.map(data => (\r\n                            <tr key={data.id}>\r\n                                <td>{data.nome}</td>\r\n                                <td>{formatDate(data.dataCriacao)}</td>\r\n                                <td>{data.multa}</td>\r\n                                <td>{status[data.status]}</td>\r\n                                <td className=\"edit-icon\" onClick={() => {\r\n                                    setSelected(data)\r\n                                    setShowModal(true)\r\n                                }}><i className=\"fas fa-edit\"></i></td>\r\n                                <td className=\"trash-icon\" onClick={() =>\r\n                                    setAlertYesOrNo({ show: true, message: 'Realmente deseja deletar este Código Penal?', codeId: data.id })}>\r\n                                    <i className=\"fas fa-trash\"></i>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                        :\r\n                        <tr style={{ textAlign: 'center' }}>\r\n                            <td colSpan=\"6\">Nenhum resultado...</td>\r\n                        </tr>}\r\n                    <tr style={{ textAlign: 'center' }}>\r\n                        <td colSpan=\"6\" style={{ borderTop: '1px rgba(15, 15, 15, 0.1) solid' }}\r\n                            onClick={() => {\r\n                                setSelected(null)\r\n                                setShowModal(true)\r\n                            }}><Button>Adicionar um novo código</Button></td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            <Pagination pages={pages} currentPage={pagination.currentPage} changePage={page =>\r\n                dispatch(setPage(page))} />\r\n        </Dashbaord>\r\n    )\r\n}\r\n\r\nexport default Codes","import React from 'react'\r\nimport { Route, Switch, HashRouter} from 'react-router-dom'\r\n\r\nimport PrivateRoute from './components/PrivateRoute'\r\n\r\nimport Auth from './views/Auth'\r\nimport Codes from './views/Codes'\r\n\r\nconst App = props => (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n            <Route exact path='/' component={Auth} />\r\n            <PrivateRoute exact path='/codigos' component={Codes} />\r\n        </Switch>\r\n    </HashRouter>)\r\n\r\nexport default App","import { configureStore } from '@reduxjs/toolkit'\nimport { alertSlice } from './slices/alertSlice'\nimport { userSlice } from './slices/userSlice'\nimport { paginationSlice } from './slices/paginationSlice'\n\nexport const store = configureStore({\n  reducer: {\n    alert: alertSlice.reducer,\n    user: userSlice.reducer,\n    pagination: paginationSlice.reducer\n  },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './app';\nimport { store } from './store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}